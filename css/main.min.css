a,abbr,acronym,address,applet,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}article,h1{padding:0;border:0;vertical-align:baseline}h1{margin:0;font-size:4.2rem;font:400 80px/94px "Merge One Regular",sans-serif;text-transform:uppercase}article{font:inherit}article,aside,details,figcaption,figure,footer,header,hgroup,img,menu,nav,section{display:block}body{line-height:1;font-family:"Inter",sans-serif}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:none}table{border-collapse:collapse;border-spacing:0}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}img{max-width:100%;height:auto;width:auto}html{scroll-behavior:smooth;font-size:.6vw}a{color:#fff;text-decoration:none}h2{font-size:3.6rem;font-size:48px;line-height:58px}h3{font-size:3rem}h4{font-size:2.4rem}h5{font-size:1.8rem}h6{font-size:1.2rem}.container{max-width:1440px;padding:0 20px;margin:0 auto}:root{--theme:#000000;--dark:black;--light:#1a1a1a;--v-light:#4d4d4d;--focus:rgba(0, 0, 0, 0.3);--opacity:rgba(0, 0, 0, 0.1);--v-opacity:rgba(0, 0, 0, 0.05);--white:#ffffff;--black:#000000;--font:Inter, sans-serif;--sd-trans:all 0.2s ease-out;--h-head:8rem;--h-foot:16rem;--fz-icon-lg:2rem;--fz-icon-sm:4rem;--h1:4.2rem;--h2:3.6rem;--h3:3rem;--h4:2.4rem;--h5:1.8rem;--h6:1.2rem}@font-face{font-family:"Merge One Regular";font-style:normal;font-weight:400;src:local("Merge One Regular"),url(../font/MergeOne-Regular.woff) format("woff")}p{font-size:30px}.btn{background:#000;display:inline-block;padding:24px 44px;margin-right:auto;text-decoration:none;text-transform:uppercase;color:#fff;font-size:24px;border-radius:40px;border:1px solid #000}.btn:hover{background:#fff;color:#000}article{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px;margin:0 30px 0 0;width:640px}.filter__content,.main__content,article{display:-webkit-box;display:-ms-flexbox;display:flex}.main__content{background:url(/img/mainImg.png) no-repeat right center/contain;padding:30rem 0}.filter__content{-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:50px 0;gap:70px}.filter__item_img{position:relative}.filter__dropdown label,.filter__item-btns{display:-webkit-box;display:-ms-flexbox;display:flex}.filter__item-btns{gap:10px}.filter__item_mobile{display:none}.filter__form{display:grid;grid-template-columns:1fr 1fr;grid-auto-rows:minmax(80px,150px);padding:50px;position:absolute;top:0;bottom:0;right:0;left:0;color:#fff;background:rgba(0,0,0,.5)}.filter__form-btn{margin:auto}.filter__form h3,.filter__form-btn{grid-column-start:1;grid-column-end:3}.filter__form h4{cursor:pointer}.filter__dropdown label{-webkit-box-align:center;-ms-flex-align:center;align-items:center}@supports (-webkit-appearance:none){.main__content{background-image:url(/img/mainImg.webp)}}@media (max-width:1440px){.container{padding:0 1rem}h1{font-size:50px;line-height:60px}article{margin-left:50px;width:400px}p{font-size:24px;line-height:30px}.main__content{padding:20rem 0}.filter__item-btns{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}@media (max-width:1200px){html{font-size:.65vw}}@media (max-width:992px){html{font-size:.7vw}article{margin-left:10px;margin-right:0}.filter__content{background-image:url(/img/filterImg.png);background-repeat:no-repeat;background-position:center center;background-size:contain}@supports (-webkit-appearance:none){.filter__content{background-image:url(/img/filterImg.webp)}}}@media (max-width:768px){html{font-size:.8vw}.container{padding:0}article{margin-right:0;width:300px}p{font-size:18px;line-height:20px}h1{font-size:32px;line-height:36px}.btn{font-size:16px;line-height:12px;padding:14px 36px}}@media (max-width:576px){html{font-size:1vw}p{font-size:9px;line-height:11px}h1{font-size:23px;line-height:27px}.btn{font-size:10px;line-height:10px;padding:6px 16px}article{width:185px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */